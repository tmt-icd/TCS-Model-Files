subsystem=TCS
component=M3Assembly
description="""TCS M3 Assembly commands."""
receive=[
{
	name=Initialize
	description="""Ask M3CS to initialize"""
}
{
	name=Reboot
	description="""Ask M3CS to reboot"""
}
{
	name=Shutdown
	description="""Ask M3CS to shutdown"""
}	
{
	name=axis
	description="""This command turns drive power on or off for one or more axes."""
	requiredArgs=["operation","axes"]
	args=[
			{
				name=operation 
				description="""This will be used to turn drive power on or off."""
				enum=[On,Off]
			}
			{
				name=axes 
				description="""This is the axes for which we want to turn Drive Off or On."""
				enum=[TILT,ROTATION,BOTH]
			}
		]
}
{
	name=bearingSweep
	description="""This command in sweep through each axis full range of motion to distribute lubricant in the bearing."""
	requiredArgs=["axes,rotation,tilt"]
	args=[
			{
				name=axes
				description="""This is the axes for which we want Bearing Sweep Operation to be performed"""
				enum=[TILT,ROTATION,BOTH]
			}
			{
				name=rotation
				description="""This is the rotation angle for Bearing Sweep operation. Its value can be in range ±181 which is TBC"""
				type=double
				units=deg
			}
			{
				name=tilt
				description="""This is the tilt angle for Bearing Sweep operation. Its value range is TBD."""
				type=double
				units=deg
			}
		]
}
{
	name=cancelProcessing
	description="""This command will help in cancelling a command which is currently being processed and mark update assembly so that it will be ready to accept a new command"""
}
{
	name=datum
	description="""This command will datum the encoders for the specified axis"""
	requiredArgs=["axes"]
	args=[
			{
				name=axes
				description="""This is the axes for which needs to be datumed"""
				enum=[TILT,ROTATION,BOTH]
			}
		]
}
{
	name=lock
	description="""This command will Move M3 to the requested lock positions"""
	requiredArgs=["operation","axes","rotation","tilt"]
	args=[
			{
				name=operation 
				description="""This parameter will help in locking and Unlocking."""
				enum=[On,Off]
			}
			{
				name=axes 
				description="""This is the axes which we want to lock or unlock."""
				enum=[TILT,ROTATION,BOTH]
			}
			{
				name=rotation
				description="""This is rotation angle to which operator wants M3 to lock to. Its value can be 0°, 90°, 180° or 270°."""
				type=double
				units=deg
			}
			{
				name=tilt
				description="""This is tilt angle to which operator wants M3 to lock to. Its value can be 45°"""
				type=double
				units=deg
			}
		]	
}	
{
	name=move
	description="""This command will be used to move M3 to the desired Rotation and Tilt angle."""	
	requiredArgs=["operation","rotation","tilt"]
	args=[
			{
				name=operation 
				description="""This will be used to move M3 to specific Rotation and Tilt angle."""
				enum=[On,Off]
			}
			{
				name=rotation
				description="""This is the rotation angle at which M3 needs to be moved."""
				type=double
				units=deg
			}
			{
				name=tilt
				description="""This is the tilt angle at which M3 needs to be moved."""
				type=double
				units=deg
			}
		]	
}
{
	name=Track 
	description="""This command will be used to mark M3 in Track mode or get it out of track mode. When this command is executed M3 moves to the requested Rotation and Tilt positions. Once M3 reaches the required coordinates, it will then start following Position Demands being published by TCSpk."""
	requiredArgs=["operation","rotation","tilt"]
	args=[
			{
				name=operation 
				description="""This will be used to mark M3 in Track Mode or get it out of track mode"""
				enum=[On,Off]
			}
			{
				name=rotation
				description="""This is the rotation angle at which M3 needs to be moved. """
				type=double
				units=deg
			}
			{
				name=tilt
				description="""This is the tilt angle at which M3 needs to be moved"""
				type=double
				units=deg
			}
		]	
}	
{
	name=Park  
	description="""This command will be used to park M3 once observation is over. M3 will move to default Rotation and Tilt position being defined in Assembly Configuration."""
}	
{
	name=ReadConfiguration   
	description="""This command shall be used to read active in memory configuration of M3. This command is effective only if M3 is in running state else the configuration is rejected."""
}
{
	name=Servo 
	description="""This command will turn the servo off for the requested axis. If the configuration is accepted HCD will send Servo off command to M3 for the requested axis. The configuration is rejected if M3 is not in running state."""
	requiredArgs=["axes"]
	args=[
			{
				name=axes 
				description="""This is the axes for which the command needs to be executed."""
				enum=[TILT,ROTATION,BOTH]
			}
		]	
}
{
	name=Log  
	description="""This command will help in starting and stopping diagnostic event data publishing."""
	requiredArgs=["enable"]
	args=[
			{
				name=enable 
				description="""This will start (Value = On) or Stop (Value = Off) diagnostic event data."""
				enum=[On,Off]
			}
		]	
}				
]
send=[
 {
    name = Initialize
    subsystem = TCS
    component = M3HCD
 }
 {
    name = Reboot
    subsystem = TCS
    component = M3HCD
 }
 {
    name = Shutdown
    subsystem = TCS
    component = M3HCD
 }
 {
    name = AxisOn
    subsystem = TCS
    component = M3HCD
 }
 {
    name = AxisOff
    subsystem = TCS
    component = M3HCD
 }
 {
    name = BearingSweep
    subsystem = TCS
    component = M3HCD
 }
 {
    name = CancelProcessing
    subsystem = TCS
    component = M3HCD
  }
  {
    name = Datum
    subsystem = TCS
    component = M3HCD
  }
  {
    name = LockPosition
    subsystem = TCS
    component = M3HCD
  }
  {
    name = PointDemand
    subsystem = TCS
    component = M3HCD
  }
  {
    name = Follow
    subsystem = TCS
    component = M3HCD
  }
  {
    name = Point
    subsystem = TCS
    component = M3HCD
  }
  {
    name = ReadConfiguration
    subsystem = TCS
    component = M3HCD
  }
  {
    name = ServoOff
    subsystem = TCS
    component = M3HCD
  }
  {
    name = StartLogging
    subsystem = TCS
    component = M3HCD
  }
  {
    name = StopLogging
    subsystem = TCS
    component = M3HCD
  }
	
]
