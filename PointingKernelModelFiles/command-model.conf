subsystem = TCS
component = PointingKernelAssembly
description = """TCS Pointing Kernel Assembly commands."""
receive = [
  {
    name = SlewToTarget
    description = """This command slews telescope to target position."""
    requiredArgs = ["Type,Refframe,RA,DEC"]
    args = [
      {
        name = Type
        description = """Its value can be science target or guide start target"""
        enum = [science, guide]
      }
      {
        name = Refframe
        description = """Its value can be ICRS/FK5/AZEL/APPT/ or Planet/AsAmajorPlanet """
        enum = [ICRS, FK5, AZEL, APPT, Planet, AsAmajorPlanet]
      }
      {
        name = RA
        description = """ra paramter value"""
        type = string
      }
      {
        name = DEC
        description = """dec paramter value"""
        type = string
      }
      {
        name = Epoch
        description = """epoch paramter value"""
        type = string
      }
      {
        name = ProperMotionInRA
        description = """ProperMotionInRA paramter value"""
        type = string
      }
      {
        name = ProperMotionInDEC
        description = """ProperMotionInDEC paramter value"""
        type = string
      }
      {
        name = RadialVelocity
        description = """RadialVelocity paramter value"""
        type = string
      }
    ]
  }
  {
    name = SetOffSet
    description = """This command sets offset to target position."""
    requiredArgs = ["Type", "Refframe", "Xcoordinate", "Ycoordinate", "Relativeto"]
    args = [
      {
        name = Type
        description = """Its value can be target/guider/instrument/pointingorigin"""
        enum = [Target, Guider, Instrument, PointingOrigin]
      }
      {
        name = Refframe
        description = """This is the reference frame system that needs to be applied on offset values. It will be required only in case of type is target"""
        type = string
      }
      {
        name = Xcoordinate
        description = """This is the offset value for x coordinate"""
        type = double
      }
      {
        name = Ycoordinate
        description = """This is the offset value for y coordinate"""
        type = double
      }
      {
        name = Relativeto
        description = """Its value can be base or current. In case parameter value is not provided, then the value for “Offset relative to” assembly configuration will be considered for applying the offset"""
        enum = [Base, Current]
      }
    ]
  }
  {
    name = SetPointingModel
    description = """This command selects specific pointing model file from the configuration service."""
    requiredArgs = ["Name"]
    args = [
      {
        name = Name
        description = """Name of the pointing model file"""
        type = string
      }
    ]
  }
  {
    name = SetCollimationOffset
    description = """This command applys the collimation offsets to the pointing model"""
    requiredArgs = ["Ca,Ce,CollimationSource"]
    args = [
      {
        name = Ca
        description = """This is the offset to the CA term"""
        type = double
      }
      {
        name = Ce
        description = """This is the offset to the CE term"""
        type = string
      }
      {
        name = CollimationSource
        description = """Its value can be current or session. In case of “current”, ca/ce values being passed will be used and in case of “session”, ca/ce values stored using absorb offset command will be used."""
        enum = [Current, Session]
      }
    ]
  }
  {
    name = SetPointingOrigin
    description = """This command sets or changes pointing origin."""
    requiredArgs = ["Name", "Xposition", "Yposition"]
    args = [
      {
        name = Name
        description = """Name of selected pointing origin"""
        enum = [Azimuth, Elevation, BOTH]
      }
      {
        name = Xposition
        description = """This is the position in focal planes x axis where pointing origin needs to be set."""
        type = double
      }
      {
        name = Yposition
        description = """This is the position in focal planes y axis where pointing origin needs to be set."""
        type = double
      }
    ]
  }
  {
    name = SetInstrument
    description = """This command sets an instrument for observation"""
    requiredArgs = ["Name"]
    args = [
      {
        name = Name
        description = """Axes whose servo needs to be turned on or off"""
        enum = [Azimuth, Elevation, BOTH]
      }
    ]
  }
  {
    name = SetRotatorMode
    description = """This command sets rotator mode i.e. either Vertical or Position Angle mode"""
    requiredArgs = ["mode"]
    args = [
      {
        name = mode
        description = """This parameter will help in setting the rotator mode."""
        enum = [Vertical, Position]
      }
    ]
  }
  {
    name = SetInstrumentPositionAngle
    description = """This command sets instrument position angle for instrument to be used for observation"""
    requiredArgs = ["angle"]
    args = [
      {
        name = angle
        description = """This parameter sets instrument position angle."""
        type = double
      }
    ]
  }
  {
    name = SetGuiderTarget
    description = """This command sets target specific to guider."""
    requiredArgs = ["Refframe"]
    args = [
      {
        name = Refframe
        description = """This parameter sets instrument position angle."""
        enum = [ICRS, FK5, AZEL, APPT, Planet, AsAmajorPlanet]
      }
      {
        name = RA
        description = """RA parameter value"""
        type = string
      }
      {
        name = DEC
        description = """DEC parameter value"""
        type = string
      }
      {
        name = Epoch
        description = """Epch parameter value."""
        type = string
      }
      {
        name = ProperMotionInRA
        description = """proper motion in RA param value"""
        type = string
      }
      {
        name = ProperMotionInDEC
        description = """proper motion in DEC value"""
        type = string
      }
      {
        name = RadialVelocity
        description = """Radial velocity value"""
        type = string
      }
      {
        name = ReferenceTime
        description = """Reference time value"""
        type = number
      }
      {
        name = DifferentialTrackingRateInRA
        description = """Differential tracking rate in RA"""
        type = string
      }
      {
        name = DifferentialTrackingRateInDEC
        description = """Differential tracking rate in DEC"""
        type = string
      }
    ]
  }
  {
    name = SetTargetWavelength
    description = """This command sets instrument position angle for instrument to be used for observation."""
    requiredArgs = ["targettype ", "wavelength"]
    args = [
      {
        name = targettype
        description = """Target Type can be either a Science target or Guide Star"""
        enum = [Science, Guide]
      }
      {
        name = wavelength
        description = """This parameter sets the wavelength."""
        type = double
      }
    ]
  }
  {
    name = SetDifferentialTrackRate
    description = """This command sets differential track rate for Science or Guide Star Target"""
    requiredArgs = ["targettype", "radiff", "decdiff"]
    args = [
      {
        name = targettype
        description = """Target Type can be either a Science target or Guide Star."""
        enum = [Science, Guide]
      }
      {
        name = radiff
        description = """This parameter will have value for differential tracking rates in RA in arcsec/sec."""
        type = string
      }
      {
        name = decdiff
        description = """This parameter will have value for differential tracking rates in DEC in arcsec/sec."""
        type = string
      }
    ]
  }
  {
    name = GETWCSSnapshot
    description = """This command generates FITS Header on request. FITS Header will be appended to FITS file by the requesting subsystem"""
  }
  {
    name = AzWrap
    description = """This command forces azimuth to override shortest slew and go Counter Clockwise (CCW) or Clockwise (CW). If azwrap is SP,then Shortest Path will be followed."""
    requiredArgs = ["value"]
    args = [
      {
        name = value
        description = """It can have values as CW, SP or CCW. In case CCW, mount will select counter clockwise manner for movement. In case CW, mount will move in counter clockwise manner. For SP, mount will move in Shortest Path possible."""
        enum = [SP, CW, CCW]
      }
    ]
  }
  {
    name = Rotwrap
    description = """This command forces rotator to override shortest slew and go Counter Clockwise (CCW) or Clockwise (CW). If rotwrap is “SP”, then Shortest Path will be followed."""
    requiredArgs = ["value"]
    args = [
      {
        name = value
        description = """It can have values as CW, SP or CCW. In case CCW, rotator will select counter clockwise manner for movement. In case CW, rotator will move in counter clockwise manner. For SP, rotator will move in Shortest Path possible."""
        enum = [SP, CW, CCW]
      }
    ]
  }
  {
    name = MarkBase
    description = """This command folds the current offsets into the base coordinates, effectively making the current position the base position"""
  }
  {
    name = GotoBase
    description = """This command clears the offset values, moving the telescope back to the base position."""
  }
  {
    name = AbsorbOffset
    description = """This command help absorbing offsets to the base value."""
    requiredArgs = ["type"]
    args = [
      {
        name = type
        description = """Its value can be target/guider/instrument/pointingorigin/pointingmodel."""
        enum = [target, guider, instrument, pointingorigin, pointingmodel]
      }
    ]
  }
  {
    name = ClearOffset
    description = """This command clears the offset values."""
    requiredArgs = ["type"]
    args = [
      {
        name = type
        description = """Its value can be target/guider/instrument/pointingorigin/pointingmodel."""
        enum = [target, guider, instrument, pointingorigin, pointingmodel]
      }
    ]
  }
  {
    name = SetDawdling
    description = """This command is used to start or stop the telescope Dawdle mode."""
    requiredArgs = ["operation,tuneparam"]
    args = [
      {
        name = operation
        description = """Its value will be On/Off"""
        enum = [On, Off]
      }
      {
        name = tuneparam
        description = """It represents the tuning parameter, i.e. maximum rate of change for the target position and the pointing origin"""
        type = double
      }
    ]
  }
  {
    name = TuneDawdling
    description = """This command is used to set the tuning parameter value for Dawdle mode"""
    requiredArgs = ["tuneparam"]
    args = [

      {
        name = tuneparam
        description = """It represents the tuning parameter, i.e. maximum rate of change for the target position and the pointing origin"""
        type = double
      }
    ]
  }
]
